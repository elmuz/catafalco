---
- name: Create the necessary {{ container_name }} folder (1) // mariadb
  file:
    path: "{{ docker_dir }}/{{ container_name }}/mariadb/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create the necessary {{ container_name }} folder (2) // storage
  file:
    path: "{{ docker_dir }}/{{ container_name }}/storage/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create the necessary {{ container_name }} folder (3) // cache
  file:
    path: "{{ cache_root }}/docker-volumes-cache/{{ container_name }}/storage/cache/"
    state: directory
    owner: "{{ username }}"
    group: "100"  # users
    mode: 0755

- name: Make sure that PhotoPrism MariaDB container is created and running
  docker_container:
    name: "photoprism-mariadb"
    image: "mariadb:latest"
    pull: yes
    networks:
      - name: swag_internal_network
    command: "mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120"
    state: 'started'
    user: "{{ guid }}:{{ guid }}"
    env:
      "TZ": "{{ timezone }}"
      "MYSQL_ROOT_PASSWORD": "{{ mysql_root_password }}"
      "MYSQL_DATABASE": "photoprism_db"
      "MYSQL_USER": "{{ mysql_user }}"
      "MYSQL_PASSWORD": "{{ mysql_password }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/mariadb:/var/lib/mysql"
    restart_policy: unless-stopped

- name: Make sure that Photoprism container is created and running
  docker_container:
    name: "{{ container_name }}"
    image: photoprism/photoprism:latest
    pull: yes
    networks:
      - name: swag_internal_network
    security_opts:
      - seccomp:unconfined
      - apparmor:unconfined
    state: "started"
    shm_size: 3G
    env:
      "PHOTOPRISM_GID": "109"  # set this to `getent group render | cut -d: -f3`
      "PHOTOPRISM_UID": "{{ guid }}"
      "PHOTOPRISM_UMASK": "0002"
      "TZ": "{{ timezone }}"
      "PHOTOPRISM_ADMIN_PASSWORD": "{{ photoprism_password }}"
      "PHOTOPRISM_SITE_URL": "https://photoprism.{{ host_local }}"
      "PHOTOPRISM_EXPERIMENTAL": "false"
      "PHOTOPRISM_HTTP_HOST": "0.0.0.0"
      "PHOTOPRISM_HTTP_PORT": "2342"
      "PHOTOPRISM_HTTP_COMPRESSION": "gzip"
      "PHOTOPRISM_DATABASE_DRIVER": "mysql"
      "PHOTOPRISM_DATABASE_SERVER": "photoprism-mariadb:3306"
      "PHOTOPRISM_DATABASE_NAME": "photoprism_db"
      "PHOTOPRISM_DATABASE_USER": "{{ mysql_user }}"
      "PHOTOPRISM_DATABASE_PASSWORD": "{{ mysql_password }}"
      "PHOTOPRISM_ORIGINALS_PATH": "/photoprism/originals"
      "PHOTOPRISM_STORAGE_PATH": "/photoprism/storage"
      "PHOTOPRISM_IMPORT_PATH": "/photoprism/storage/import"
      "PHOTOPRISM_SIDECAR_PATH": "/photoprism/storage/sidecar"
      "PHOTOPRISM_CACHE_PATH": "/photoprism/storage/cache"
      "PHOTOPRISM_BACKUP_PATH": "/photoprism/storage/backup"
      "PHOTOPRISM_TEMP_PATH": "/photoprism/storage/temp"
      "PHOTOPRISM_WORKERS": "2"
      "PHOTOPRISM_READONLY": "true"
      "PHOTOPRISM_DISABLE_CHOWN": "true"
      "PHOTOPRISM_DISABLE_BACKUPS": "true"
      "PHOTOPRISM_DISABLE_WEBDAV": "true"
      "PHOTOPRISM_DETECT_NSFW": "false"
      "PHOTOPRISM_UPLOAD_NSFW": "false"
      "PHOTOPRISM_THUMB_FILTER": "lanczos"
      "PHOTOPRISM_THUMB_UNCACHED": "true"
      "PHOTOPRISM_THUMB_SIZE": "2048"
      "PHOTOPRISM_THUMB_SIZE_UNCACHED": "7680"
      "PHOTOPRISM_JPEG_SIZE": "7680"
      "PHOTOPRISM_ORIGINALS_LIMIT": "2000"
      "PHOTOPRISM_JPEG_QUALITY": "88"
      "PHOTOPRISM_FFMPEG_ENCODER": "h264_qsv"
      "PHOTOPRISM_INIT": "update gpu tensorflow clean"
      "TF_CPP_MIN_LOG_LEVEL": "0"
    devices:
      - "/dev/dri/renderD128:/dev/dri/renderD128" # Intel GPU
      - "/dev/dri/card0:/dev/dri/card0" # Intel GPU
    working_dir: "/photoprism"
    volumes:
      - "{{ mergerfs_root }}/Pictures/sara/PC-pers-immagini/01.Fotografie:/photoprism/originals:ro"
      - "{{ mergerfs_root }}/docker-volumes-cache/{{ container_name }}/storage/cache:/photoprism/storage/cache"
      - "{{ docker_dir }}/{{ container_name }}/storage:/photoprism/storage"
    restart_policy: unless-stopped

- name: Schedule a library scan at 12 AM every day
  cron:
    name: Scan the PhotoPrism library
    minute: "5"
    hour: "0"
    job: "/usr/bin/docker exec photoprism photoprism index"

- name: Schedule a database backup at 12 AM every day
  cron:
    name: Backup PhotoPrism database
    minute: "0"
    hour: "0"
    job: "mv {{ docker_dir }}/{{ container_name }}/storage/backup/mysql/backup.sql {{ docker_dir }}/{{ container_name }}/storage/backup/mysql/backup.sql.old || /usr/bin/docker exec --user {{ guid }}:{{ guid }} {{ container_name }} photoprism backup -i /photoprism/storage/backup/mysql/backup.sql"
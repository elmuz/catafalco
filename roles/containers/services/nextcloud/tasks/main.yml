---
# 1. At the very beginning of time configure the main user. Select MariaDB:
#    * {{ nextcloud_user }}  # this has to be equal to {{ username }} if you want PhotoPrism to share the same folder
#    * {{ nextcloud_password }}
#    * "/data"
#    * {{ mysql_user }}
#    * {{ mysql_password }}
#    * "nextcloud_db"
#    * "nextcloud-mariadb:3306"
#
# 2. It might take some time. You cannot mount {{ mergerfs_root }}/Nextcloud/{{ username }} before creating the user
#    or it will complain about permissions. So first craete a {{ username }} user, then stop and remove the container,
#    move {{ docker_dir }}/{{ container_name }}/data/{{ username }} to {{ mergerfs_root }}/Nextcloud/ and launch
#    ansible role again with the mount active.

- name: Create the necessary {{ container_name }} folders (1)
  file:
    path: "{{ docker_dir }}/{{ container_name }}/mariadb/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create the necessary {{ container_name }} folders (2)
  file:
    path: "{{ docker_dir }}/{{ container_name }}/config/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create the necessary {{ container_name }} folders (3)
  file:
    path: "{{ docker_dir }}/{{ container_name }}/data/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Make sure that MariaDB container is created and running
  docker_container:
    name: "nextcloud-mariadb"
    image: "mariadb"
    pull: yes
    command: "--transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed --innodb-read-only-compressed=OFF"
    state: 'started'
    labels:
      "flame.type": "application"
      "flame.name": "{{ container_name | title }}"
      "flame.url": "{{ dashboard_url }}"
      "flame.icon": "custom"
    user: "{{ guid }}:{{ guid }}"
    env:
      "TZ": "{{ timezone }}"
      "MYSQL_ROOT_PASSWORD": "{{ mysql_root_password }}"
      "MYSQL_DATABASE": "nextcloud_db"
      "MYSQL_USER": "{{ mysql_user }}"
      "MYSQL_PASSWORD": "{{ mysql_password }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/mariadb:/var/lib/mysql"
    restart_policy: unless-stopped
    
- name: Make sure that Redis container is created and running
  docker_container:
    name: "nextcloud-redis"
    image: "redis:alpine"
    pull: yes
    state: 'started'
    restart_policy: unless-stopped
 
- name: Make sure that Nextcloud container is created and running
  docker_container:
    name: "{{ container_name }}"
    image: "ghcr.io/linuxserver/nextcloud:php8"
    pull: yes
    state: 'started'
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "TZ": "{{ timezone }}"
      "MYSQL_USER": "{{ mysql_user }}"
      "MYSQL_PASSWORD": "{{ mysql_password }}"
      "MYSQL_DATABASE": "nextcloud_db"
      "MYSQL_HOST": "nextcloud-mariadb"
      "NEXTCLOUD_ADMIN_USER": "{{ nextcloud_user }}"
      "NEXTCLOUD_ADMIN_PASSWORD": "{{ nextcloud_password }}"
      "NEXTCLOUD_DATA_DIR": /data
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/config:/config"
      - "{{ docker_dir }}/{{ container_name }}/data:/data"
      - "{{ mergerfs_root }}/Nextcloud/{{ username }}:/data/{{ username }}"
    restart_policy: unless-stopped

- name: Add {{ container_name }} to the SWAG network (reverse-proxy)
  docker_network:
    name: swag_public_network
    connected:
      - "{{ container_name }}"
      - nextcloud-mariadb
      - nextcloud-redis
    appends: yes
  when: enable_swag

- name: Schedule a Nextcloud library scan at midnight every day
  cron:
    name: Scan the Nextcloud library
    minute: "0"
    hour: "0"
    job: "docker exec nextcloud sudo -u abc php8 /config/www/nextcloud/occ files:scan --all"

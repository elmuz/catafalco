---
- name: Copy the necessary invidous-db files (1)
  copy:
    src: sql
    dest: "{{ docker_dir }}/{{ invidious_container_name }}/db/sql"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0755"

- name: Copy the necessary invidous-db files (2)
  copy:
    src: init-invidious-db.sh
    dest: "{{ docker_dir }}/{{ invidious_container_name }}/db/init-invidious-db.sh"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0755"

- name: Create docker network
  ansible.builtin.include_tasks:
    file: network.yml

- name: Make sure that invidous-db container is created and running
  community.docker.docker_container:
    name: "{{ invidious_container_name }}-db"
    image: docker.io/library/postgres:14
    pull: true
    env:
      POSTGRES_DB: invidious
      POSTGRES_USER: funkysloth
      POSTGRES_PASSWORD: "{{ invidious_postgres_password }}"
    networks:
      - name: "{{ invidious_network_name }}"
    state: started
    restart_policy: unless-stopped
    volumes:
      - "{{ docker_dir }}/{{ invidious_container_name }}/db/sql:/config/sql"
      - "{{ docker_dir }}/{{ invidious_container_name }}/db/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh"
    healthcheck:
      test: [CMD-SHELL, pg_isready -U funkysloth -d invidious]
      interval: 5m
      start_period: 30s

- name: Make sure that Invidious companion container is created and running
  community.docker.docker_container:
    name: "{{ invidious_container_name }}-companion"
    image: quay.io/invidious/invidious-companion:latest
    pull: true
    cap_drop:
      - all
    read_only: true
    security_opts:
      - no-new-privileges:true
    init: true
    env:
      SERVER_SECRET_KEY: "{{ invidious_companion_key }}"
      SERVER_BASE_URL: "{{ invidious_dashboard_url }}"
    networks:
      - name: "{{ invidious_network_name }}"
    expose:
      - "127.0.0.1:8282:8282"
    state: started
    restart_policy: unless-stopped

# - name: Make sure that Invidious sig_helper is created and running
#   community.docker.docker_container:
#     name: inv_sig_helper
#     image: quay.io/invidious/inv-sig-helper:latest
#     init: true
#     command: ["--tcp", "0.0.0.0:12999"]
#     env:
#       RUST_LOG: info
#     networks:
#       - name: "{{ invidious_network_name }}"
#     restart_policy: unless-stopped
#     cap_drop:
#       - all
#     read_only: true
#     state: started
#     security_opts:
#       - no-new-privileges:true

- name: Make sure that Invidious container is created and running
  community.docker.docker_container:
    name: "{{ invidious_container_name }}"
    image: quay.io/invidious/invidious:master
    pull: true
    env:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: funkysloth
          password: {{ invidious_postgres_password }}
          host: invidious-db
          port: 5432
        check_tables: true
        invidious_companion:
        - private_url: "http://{{ invidious_container_name }}-companion:8282"
          public_url: "{{ invidious_dashboard_url }}"
        invidious_companion_key: {{ invidious_companion_key }}
        # visitor_data: {{ invidious_visitor_data }}
        # po_token: {{ invidious_po_token }}
        https_only: true
        domain: "invidious.{{ host_local }}"
        external_port: 443
        use_pubsub_feeds: true
        statistics_enabled: false
        hmac_key: {{ invidious_hmac }}
    networks:
      - name: "{{ invidious_network_name }}"
    links:
      - "{{ invidious_container_name }}-db"
    state: started
    restart_policy: unless-stopped
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
      interval: 5m
      timeout: 5s
      retries: 2
    log_driver: json-file
    log_options:
      max-size: 10M
      max-file: "4"
    labels:
      swag.uptime-kuma.enabled: "true"
      swag.uptime-kuma.monitor.name: "{{ invidious_dashboard_name }}"
      swag.uptime-kuma.monitor.url: "{{ invidious_dashboard_url }}"

- name: Install the SWAG config files
  ansible.builtin.template:
    src: "templates/{{ invidious_container_name }}.subdomain.conf.j2"
    dest: "{{ docker_dir }}/swag/nginx/proxy-confs/{{ invidious_container_name }}.subdomain.conf"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

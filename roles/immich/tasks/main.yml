---
- name: Create the necessary Immich folders
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{ immich_container_name }}/{{ item }}/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - upload
    - models
    - backup

- name: Copy the necessary Immich files (compose)
  ansible.builtin.template:
    src: templates/compose.yml.j2
    dest: "{{ docker_dir }}/{{ immich_container_name }}/compose.yml"
    mode: "0644"

- name: Copy the necessary Immich files (env vars)
  ansible.builtin.template:
    src: templates/.env.j2
    dest: "{{ docker_dir }}/{{ immich_container_name }}/.env"
    mode: "0644"

- name: Copy the necessary Immich files (hw machine learning)
  ansible.builtin.copy:
    src: hwaccel.ml.yml
    dest: "{{ docker_dir }}/{{ immich_container_name }}/hwaccel.ml.yml"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"

- name: Create docker network
  ansible.builtin.include_tasks:
    file: network.yml

- name: Make sure Immich containers are running
  community.docker.docker_compose_v2:
    project_src: "{{ docker_dir }}/{{ immich_container_name }}"
    state: present
    remove_orphans: true
    remove_volumes: true

- name: Install the SWAG config files
  template:
    src: "{{ immich_container_name }}.subdomain.conf.j2"
    dest: "{{ docker_dir }}/swag/nginx/proxy-confs/{{ immich_container_name }}.subdomain.conf"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Add cron job for the database backup
  ansible.builtin.cron:
    name: Dump Immich database
    user: root
    job: >-
      docker exec -t immich-postgres pg_dumpall --clean --if-exists --username=postgres |
      gzip > "{{ docker_dir }}/{{ immich_container_name }}/backup/latest.sql.gz"
    minute: 50
    hour: 4
    day: "*"
    month: "*"
    weekday: "*"
    state: present
  become: true

- name: Setup backup cron job
  ansible.builtin.include_tasks: tasks/backup_service.yml
  vars:
    service_name: "{{ immich_container_name }}"
    cron_schedule: "0 5 * * *"
    backup_cli_args:
      source_paths: "{{ docker_dir }}/{{ immich_container_name }}"
      destination_path: "{{ mergerfs_root }}/docker-volumes-backup"
      container_names_str: "{{ immich_container_name }}-postgres"

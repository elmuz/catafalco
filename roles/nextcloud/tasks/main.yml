---
- name: Create necessary folders
  ansible.builtin.file:
    path: "{{ docker_dir }}/nextcloud/{{ item }}"
    state: directory
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0755"
  loop:
    - config
    - data
    - mariadb
    - backup
    - mariadb/crontabs

- name: Copy crontab file for automatic backup
  ansible.builtin.template:
    src: mariadb-cron.j2
    dest: "{{ docker_dir }}/nextcloud/mariadb/crontabs/abc"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Create a docker network
  community.docker.docker_network:
    name: nextcloud_network
    connected:
      - "{{ swag_container_name }}"
    appends: true

- name: Make sure the MariaDB container is created and running
  community.docker.docker_container:
    name: "{{ nextcloud_mysql_host }}"
    image: lscr.io/linuxserver/mariadb:10.11.8
    pull: true
    state: started
    networks:
      - name: nextcloud_network
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "TZ": "{{ timezone }}"
      "MYSQL_ROOT_PASSWORD": "{{ nextcloud['mysql_root_password'] }}"
      "MYSQL_DATABASE": "{{ nextcloud_mysql_database }}"
      "MYSQL_USER": "{{ nextcloud_mysql_user }}"
      "MYSQL_PASSWORD": "{{ nextcloud['mysql_password'] }}"
      "DOCKER_MODS": "linuxserver/mods:universal-cron"
    volumes:
      - "{{ docker_dir }}/nextcloud/mariadb:/config"
      - "{{ docker_dir }}/nextcloud/backup:/backup"
    restart_policy: unless-stopped

- name: Add the ".ncdata" file
  block:
    - name: Create the ".ncdata" file
      ansible.builtin.file:
        path: "{{ docker_dir }}/nextcloud/data/.ncdata"
        state: touch
        owner: "{{ guid }}"
        group: "{{ guid }}"
        mode: '0644'
    - name: Add the line in the ".ncdata" file
      ansible.builtin.lineinfile:
        path: "{{ docker_dir }}/nextcloud/data/.ncdata"
        search_string: "# Nextcloud data directory"
        line: "# Nextcloud data directory"
        owner: "{{ guid }}"
        group: "{{ guid }}"
        mode: '0644'

- name: Make sure the Nextcloud container is created and running
  # https://hub.docker.com/r/linuxserver/nextcloud
  community.docker.docker_container:
    name: "{{ nextcloud_container_name }}"
    image: lscr.io/linuxserver/nextcloud:latest
    pull: true
    state: started
    networks:
      - name: nextcloud_network
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "TZ": "{{ timezone }}"
      "MYSQL_PASSWORD": "{{ nextcloud['mysql_password'] }}"
      "MYSQL_DATABASE": "{{ nextcloud_mysql_database }}"
      "MYSQL_USER": "{{ nextcloud_mysql_user }}"
      "MYSQL_HOST": "{{ nextcloud_mysql_host }}"
    links:
      - nextcloud-mariadb
    volumes:
      - "{{ nextcloud_volume_config }}:/config"
      - "{{ nextcloud_volume_data }}:/data"
    restart_policy: unless-stopped

- name: Pause for 30 seconds to run the Nextcloud app
  ansible.builtin.pause:
    seconds: 30

- name: Check if Nextcloud has been installed already
  community.docker.docker_container_exec:
    container: "{{ nextcloud_container_name }}"
    command: "sh -c 'occ status --output json | jq .installed'"
  register: nextcloud_is_installed

- name: Update Nextcloud configuration
  when: not (nextcloud_is_installed.stdout | bool)
  ansible.builtin.include_tasks:
    file: configuration.yml

- name: Install OnlyOffice for document integration
  ansible.builtin.include_role:
    name: onlyoffice
  when: "'onlyoffice' in containers"

- name: Install SWAG proxy-conf
  ansible.builtin.template:
    src: nextcloud.subdomain.conf.j2
    dest: "{{ swag_volume_nginx_proxy_confs }}/nextcloud.subdomain.conf"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

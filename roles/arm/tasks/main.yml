# References:
#  * https://github.com/automatic-ripping-machine/automatic-ripping-machine/wiki/docker
#  * https://hub.docker.com/r/automaticrippingmachine/automatic-ripping-machine
#
# Notes:
# Run `lsscsi -g`, identify optical device and mount both sr/sg
---
- name: Create the necessary ARM folders (1)
  file:
    path: "{{ docker_dir }}/{{ arm_container_name }}"
    state: directory
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0755"

- name: Create the necessary ARM folders (2)
  file:
    path: "{{ docker_dir }}/{{ arm_container_name }}/css"
    state: directory
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0755"

- name: Copy the main ARM config
  copy:
    src: roles/{{ arm_container_name }}/files/arm.yaml
    dest: "{{ docker_dir }}/{{ arm_container_name }}/config/arm.yaml"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Copy ARM theme CSS
  ansible.builtin.copy:
    src: bootstrap.min.css
    dest: "{{ docker_dir }}/{{ arm_container_name }}/css/bootstrap.min.css"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Copy HandBrake custom presets
  ansible.builtin.copy:
    src: roles/{{ arm_container_name }}/files/handbrake-presets/HQ-576p-x264-crf20.json
    dest: "{{ docker_dir }}/{{ arm_container_name }}/config/HQ-576p-x264-crf20.json"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Create docker network
  ansible.builtin.include_tasks:
    file: network.yml

- name: Make sure that ARM container is created and running
  ansible.builtin.docker_container:
    name: "{{ arm_container_name }}"
    image: automaticrippingmachine/automatic-ripping-machine:latest
    pull: true
    networks:
      - name: "{{ arm_network_name }}"
    privileged: true
    devices:
      - /dev/sr0
      - /dev/sg4
    state: started
    env:
      ARM_UID: "{{ guid }}"
      ARM_GID: "{{ guid }}"
      TZ: "{{ timezone }}"
    volumes:
      - "{{ docker_dir }}/{{ arm_container_name }}/config:/etc/arm/config"
      - "{{ docker_dir }}/{{ arm_container_name }}/db:/home/arm/db"
      - "{{ docker_dir }}/{{ arm_container_name }}/css:/opt/arm/arm/ui/static/css"
      - "{{ mergerfs_root }}/Downloads/arm_raw:/home/arm/media/raw"
      - "{{ mergerfs_root }}/Downloads/arm_transcode:/home/arm/media/transcode"
      - "{{ mergerfs_root }}/Downloads/arm_completed:/home/arm/media/completed"
      - "{{ mergerfs_root }}/Downloads/arm_music:/home/arm/Music"
      - /etc/localtime:/etc/localtime:ro
    restart_policy: unless-stopped
    healthcheck:
      interval: 5m
    labels:
      swag.uptime-kuma.enabled: "true"
      swag.uptime-kuma.monitor.name: "{{ arm_dashboard_name }}"
      swag.uptime-kuma.monitor.url: "{{ arm_dashboard_url }}"

- name: Install the SWAG config files
  template:
    src: "{{ arm_container_name }}.subdomain.conf.j2"
    dest: "{{ docker_dir }}/swag/nginx/proxy-confs/{{ arm_container_name }}.subdomain.conf"
    owner: "{{ guid }}"
    group: "{{ guid }}"
    mode: "0644"

- name: Setup backup cron job
  ansible.builtin.include_tasks: tasks/backup_service.yml
  vars:
    service_name: "{{ arm_container_name }}"
    cron_schedule: "0 5 * * *"
    backup_cli_args:
      source_paths: "{{ docker_dir }}/{{ arm_container_name }}"
      destination_path: "{{ mergerfs_root }}/docker-volumes-backup"
      container_names_str: "{{ arm_container_name }}"

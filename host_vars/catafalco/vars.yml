---
# General variables
hostname: "{{ inventory_hostname }}"
timezone: Europe/Rome
dot_nameservers: [185.95.218.42@853#dns.digitale-gesellschaft.ch, 94.140.15.140@853#dns-unfiltered.adguard.com]
ntp_timezone: "{{ timezone }}"
locale: en_US.UTF-8
lan_network: 192.168.178.0/24
site_url: "{{ host_local }}"
pihole_address: 192.168.178.2
dns_nameservers: ["{{ pihole_address }}", 9.9.9.9, 149.112.112.112]
# User
username: funkysloth
guid: "1000"
shell: /usr/bin/zsh

# File systems, partitions and mounts
docker_dir: /var/opt/docker
boot_drive_serial: PBEEEBB21101806811 # Patriot Burst El

# Hard disk
spindown_time: 600 # in seconds

colorscheme: nord

# Packages
extra_packages:
  - iperf3
  - speedtest-cli
  - htop
  - powertop
  - git
  - lm-sensors
  - mosquitto
  - neofetch
  - neovim
  - nvme-cli
  - rsync
  - iotop
  - ncdu
  - python3-pip
  - reptyr
  - stow
  - tmux
  - zsh

#
# Apt mirrors
#
version: bookworm

#
# Email credentials (for SMART and Snapraid error reporting)
#
email: funkysloth@disroot.org
email_login: "{{ email }}"
email_smtp_host: disroot.org
email_smtp_port: 465
email_smtp_port_startls: 587

# MSMTP
msmtp_accounts:
  - account: disroot
    host: "{{ email_smtp_host }}"
    port: "{{ email_smtp_port_startls }}"
    auth: "on"
    from: "{{ email }}"
    user: "{{ email }}"
    password: "{{ email_password }}"

msmtp_default_account: disroot

msmtp_alias_default: "{{ email }}"

#
# SSH (geerlingguy.security)
#
security_ssh_port: 69

security_sudoers_passwordless: ["{{ username }}"]
security_autoupdate_reboot: "true"

security_autoupdate_mail_to: "{{ email }}"

security_autoupdate_mail_on_error: true

#
# Enable/disable functionality
#
enable_nas_stuff: true
enable_containers: true

#
# Active containers
#
containers:
  - actual_budget
  - arm
  - calibreweb
  - dawarich
  - deluge
  - duplicati
  - firefox
  - handbrake
  - healthchecks
  - homer
  - immich
  - influxdb
  - invidious
  - jellyfin
  - lidarr
  - navidrome
  - prowlarr
  - radarr
  - readarr
  - slskd
  - socket_proxy
  - sonarr
  - speedtest_tracker
  - stirling_pdf
  - uptime_kuma
  - vaultwarden
  - watchtower
  - wud

rclone_version: "0.0.0"
rclone_release: stable
rclone_config_location: "{{ docker_dir }}/rclone/rclone.conf"
rclone_config_owner:
  OWNER: "{{ username }}"
  GROUP: "{{ username }}"
rclone_configs:
  - name: julia
    properties:
      type: smb
      host: "{{ julia }}"
      user: catafalco
      pass: ""

cockpit_config:
  WebService:
    Origins: https://cockpit.{{ host_local }} wss://cockpit.{{ host_local }}
    ProtocolHeader: X-Forwarded-Proto

#
# SMB
#
enable_samba: true
samba_server_string: "{{ hostname }}"

# --> Moved to hidden vars
# samba_users:
#   - name: "{{ username }}"
#     password: "{{ password }}"
#   - name: "{{ username }}"
#     password: "{{ password }}"

samba_global_include: global-include.conf
samba_apple_extensions: false
samba_mitigate_cve_2017_7494: false
samba_server_max_protocol: SMB3
samba_server_min_protocol: SMB3

# Write permissions may conflict with UNIX permission. `{{ mergerfs_root }}/XXX`
# folders have `{{ username }}:users` ownership, so a valid approach might be
# adding the `force group = users` to the shares configurations. But the ansible
# plugin does not allow this.
samba_shares:
  - name: Downloads
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Downloads"
    valid_users: "@sambashare"
    write_list: "{{ username }}"

  - name: Media Alessio
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Pictures/alessio"
    valid_users: "@sambashare"
    write_list: "{{ username }} alessio"

  - name: Media Sara
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Pictures/sara"
    valid_users: "@sambashare"
    write_list: "{{ username }} sara"

  - name: Documents Alessio
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Documents/alessio"
    valid_users: "@sambashare"
    write_list: "{{ username }} alessio"

  - name: Documents Sara
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Documents/sara"
    valid_users: "@sambashare"
    write_list: "{{ username }} sara"

#  - name: Music
#    guest_ok: false
#    public: false
#    read_only: false
#    writable: true
#    browsable: true
#    owner: "{{ username }}"
#    path: "{{ mergerfs_root }}/Music"
#    valid_users: "@sambashare"
#    write_list: "{{ username }} sara"

  - name: Media
    guest_ok: false
    public: false
    read_only: false
    writable: true
    browsable: true
    owner: "{{ username }}"
    path: "{{ mergerfs_root }}/Media"
    valid_users: "@sambashare"
    write_list: "{{ username }}"

#
# Snapraid and MergerFS
#
enable_mergerfs: true

mergerfs_root: /mnt/storage
cache_root: "{{ mergerfs_root }}_cache"

data_disks:
  - { path: /mnt/data1, src: /dev/disk/by-label/Data1, content: true }
  - { path: /mnt/data2, src: /dev/disk/by-label/Data2, content: true }
#  - { path: /mnt/data3, src: /dev/disk/by-label/Data3, content: true }
#  - { path: /mnt/data, src: /dev/disk/by-label/STORAGE, content: true }

cache_disks:
  - { path: /mnt/cache1, src: /dev/disk/by-label/Cache1, content: true }

parity_disks:
  - { path: /mnt/parity1, src: /dev/disk/by-label/Parity1, content: true }

# SnapRAID
snapraid_force_install: true

snapraid_data_disks: "{{ data_disks }}"
snapraid_parity_disks: "{{ parity_disks }}"

snapraid_runner_email_sendon: error
snapraid_runner_email_pass: "{{ email_password }}"
snapraid_runner_email_address: "{{ email }}"
snapraid_runner_email_address_from: "{{ snapraid_runner_email_address }}"
snapraid_runner_email_address_to: "{{ snapraid_runner_email_address }}"
snapraid_runner_smtp_host: "{{ email_smtp_host }}"
snapraid_runner_smtp_port: "{{ email_smtp_port }}"

snapraid_runner_healthchecks_io_uuid: 92955207-2df3-4978-a1c6-4dcde12190e1
snapraid_healthchecks_io_host: "{{ healthchecks_dashboard_url }}"

snapraid_runner_delete_threshold: -1

snapraid_runner_use_ssl: true

snapraid_content_files:
  - /var/local/snapraid/snapraid.content
  - /mnt/snapraid-content/disk1/snapraid.content
  - /mnt/snapraid-content/disk2/snapraid.content


#
# SMART error reporting
#
smartd_default_mail_recipients: ["{{ email }}"]
#
# Security
#
enable_fail2ban: true

# We have our own f2b rules
security_fail2ban_enabled: false
